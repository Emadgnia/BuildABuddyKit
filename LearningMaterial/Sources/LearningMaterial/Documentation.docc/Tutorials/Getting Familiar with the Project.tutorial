@Tutorial(time: 10) {
    @Intro(title: "Getting Familiar with the Example Project") {
        This tuturial will guide you through downloading the example project and getting familiar with it.
        
        The example project consists of the following two targets:
        
        - BuildABuddyKit: A framework for customizing characters ("buddies") and rendering them to an image.
        - Build a Buddy: An example app that uses the BuildABuddyKit.
        
        Throughout this series of tutorials you will be tasked with documenting the BuildABuddyKit package in DocC. Do not worry -- you will not have to write the entire documentation. Most of the framework is documented and you will only need to fill in the blanks, and as you do so, you will get hands-on experience with several concepts of DocC.
        
        By the way! All the learning material is written in DocC ðŸ˜ƒ
    }
    
    @Section(title: "Cloning the example project") {
        @ContentAndMedia {
            Clone the example project using Git.
        }
        
        @Steps {
            @Step {
                Open https://github.com/simonbs/BuildABuddyKit
                
                @Image(source: 01-getting-familiar-with-the-project-01-01.png, alt: "Screenshot of GitHub showing the BuildABuddyKit repository.")
            }
            
            @Step {
                Select Code and copy the URL to clone the repository.
                
                @Image(source: 01-getting-familiar-with-the-project-01-02.png, alt: "Screenshot of GitHub showing the BuildABuddyKit repository with the \"Download ZIP\" highlighted.")
            }
            
            @Step {
                Clone the repository using your Git client, for example Terminal, [Fork](https://git-fork.com), [GitTower](https://www.git-tower.com/mac), or similar.
                
                @Image(source: 01-getting-familiar-with-the-project-01-03.png, alt: "Screenshot of Terminal cloning the repository.")
            }
        }
    }
        
    @Section(title: "Understand the project structure") {
        @ContentAndMedia {
            Get familiar with the structure of the project. 
        }
            
        @Steps {
            @Step {
                Open the BuildABuddyKit folder that was cloned previously.  The root of the folder contains the BuildABuddyKit framework with the source files located in the `Sources` folder. The `BuildABuddy` folder contains the example project that uses the framework and the `LearningMaterial` contains the learning material you are reading now.
                
                @Image(source: 01-getting-familiar-with-the-project-02-01.png, alt: "Screenshot of Finder showing the contents of the BuildABuddyKit folder with the BuildABuddy, LearningMaterial, and Sources folders highlighted.")
            }
            
            @Step {
                Open the `BuildABuddy` folder and double-click `BuildABuddy.xcodeproj` project to open it in Xcode.
                
                @Image(source: 01-getting-familiar-with-the-project-02-02.png, alt: "Screenshot of Finder showing the contents of the BuildABuddy folder with the BuildABuddy.xcodeproj file highlighted.")
            }
            
            @Step {
                The BuildABuddyKit package contains the source code and resources for the framework that we will document.  This is where we will be doing most of our work.
                
                @Image(source: 01-getting-familiar-with-the-project-02-03.png, alt: "Screenshot of Xcode showing with BuildABuddy.xcodeproj open. The contents of the BuildABuddyKit package is highlighted.")
            }
            
            @Step {
                The BuildABuddy folder contains the source code, resources, and documentation for the example app that uses the BuildABuddyKit framework.
                
                @Image(source: 01-getting-familiar-with-the-project-02-04.png, alt: "Screenshot of Xcode showing with BuildABuddy.xcodeproj open. The contents of the BuildABuddy folder is highlighted.")
            }
        }
    }
        
    @Section(title: "Run the example project") {
        @ContentAndMedia {
            Get a better understanding of the functionality of BuildABuddyKit by running the app in the simulator.
        }
            
        @Steps {
            @Step {
                Ensure the BuildABuddy scheme and an iPhone simulator is selected. Then select the Play button to run the example app in the simulator.
                
                @Image(source: 01-getting-familiar-with-the-project-03-01.png, alt: "Screenshot of Xcode showing with BuildABuddy.xcodeproj open. The scheme picker, Run Destination picker, and the Plauy button are highlighted.")
            }
            
            @Step {
                The iPhone simulator should launch and then run the Build a Buddy app.
                
                > Important: The initial character is chosen at random, and as such, the character showing in your simulator may be different from the one in the screenshot on the right.
                
                @Image(source: 01-getting-familiar-with-the-project-03-02.png, alt: "Screenshot of the iPhone simulator showing the Build a Buddy app.")
            }
            
            @Step {
                Finally, play around with the example app to get an idea of what the BuildABuddyKit framework can do. For example, you can change the shirt your buddy is wearing.
                
                > Warning: The app is highly addictive! Do not spend too much time playing around with it. Otherwise you will not have time to write documentation ðŸ˜ƒ
                
                @Image(source: 01-getting-familiar-with-the-project-03-03.png, alt: "Screenshot of the iPhone simulator showing the Build a Buddy app and the shirt of the buddy being configured.")
            }
        }
    }
        
    @Assessments {
        @MultipleChoice {
            What is the name of the package we will document throughout this series of tutorials?
            
            @Choice(isCorrect: false) {
                BuddyKit
                
                @Justification(reaction: "Try again!") {
                    Sorry, that is not correct. Remember that the purpose of the framework is to build buddies.
                }
            }
            
            @Choice(isCorrect: true) {
                BuildABuddyKit
                
                @Justification(reaction: "Correct!") {
                    That is correct!
                }
            }
            
            @Choice(isCorrect: false) {
                BuddyBuilderKit
                
                @Justification(reaction: "Try again!") {
                    Oops, that is not correct.
                }
            }
        }
        
        @MultipleChoice {
            What can developers do with the BuildABuddyKit framework?
            
            @Choice(isCorrect: false) {
                Locate friends no matter where they are in the world.
                
                @Justification(reaction: "Try again!") {
                    Sorry, that is not correct. Remember that the purpose of the framework is to build buddies.
                }
            }
            
            @Choice(isCorrect: false) {
                Track and monitor vital aspects of their body, such as muscle mass and blood oxygen levels.
                
                @Justification(reaction: "Try again!") {
                    Ouch, that is not correct.
                }
            }
            
            @Choice(isCorrect: true) {
                Customize characters and render them to an image.
                
                @Justification(reaction: "Correct!") {
                    That is correct! Those characters are also referred to as "buddies".
                }
            }
        }
    }
}
